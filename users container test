provider "azurerm" {
  features {}
}

# Storage Account Module
module "storage_account" {
  source = "github.com/<username>/<repo>.git"  # Replace with actual GitHub path
}

# Variables
variable "containers" {
  type    = list(string)
  default = ["container1", "container2", "container3", "users"]  # 18 elements in your case
}

variable "folders" {
  type    = list(string)
  default = ["folder1", "folder2", "folder3", "folder4"]  # 13 elements in your case
}

variable "subfolders" {
  type = map(list(string))
  default = {
    "folder1" = ["subfolderA", "subfolderB"]
    "folder2" = ["subfolderX", "subfolderY"]
    "folder3" = ["subfolderM", "subfolderN"]
  }
}

# Storage Containers
resource "azurerm_storage_container" "containers" {
  for_each             = toset(var.containers)
  name                 = each.value
  storage_account_name = module.storage_account.name

  lifecycle {
    prevent_destroy = true
  }
}

# Top-level folders: 
# - All containers EXCEPT "users" get normal folders.
# - "users" container gets only the "training" folder.
resource "azurerm_storage_blob" "top_level_folders" {
  for_each = {
    for item in flatten([
      for container in var.containers : [
        for folder in (container == "users" ? ["training"] : var.folders) : {  # ðŸŽ¯ "users" gets only "training"
          container = container
          folder    = folder
          path      = "${folder}/empty.txt"
        }
      ]
    ]) : "${item.container}_${item.folder}" => item
  }

  name                   = each.value.path
  storage_account_name   = module.storage_account.name
  storage_container_name = azurerm_storage_container.containers[each.value.container].name
  type                   = "Block"
  content_type           = "text/plain"
  source_content         = ""

  lifecycle {
    ignore_changes = [source_content, content_type]
    create_before_destroy = false
  }
}

# Subfolders: All containers EXCEPT "users" get subfolders.
resource "azurerm_storage_blob" "subfolders" {
  for_each = {
    for item in flatten([
      for container in var.containers : [
        for parent, subs in var.subfolders : [
          for sub in subs : {
            container = container
            parent    = parent
            subfolder = sub
            path      = "${parent}/${sub}/empty.txt"
          }
        ]
      ] if container != "users"  # ðŸš¨ Exclude "users" from subfolders
    ]) : "${item.container}_${item.parent}_${item.subfolder}" => item
  }

  name                   = each.value.path
  storage_account_name   = module.storage_account.name
  storage_container_name = azurerm_storage_container.containers[each.value.container].name
  type                   = "Block"
  content_type           = "text/plain"
  source_content         = ""

  lifecycle {
    ignore_changes = [source_content, content_type]
    create_before_destroy = false
  }
}
